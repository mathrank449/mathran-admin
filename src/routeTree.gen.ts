/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainLayoutRouteRouteImport } from './routes/_mainLayout/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainLayoutRankingsRouteRouteImport } from './routes/_mainLayout/rankings/route'
import { Route as MainLayoutLoginRouteRouteImport } from './routes/_mainLayout/login/route'
import { Route as MainLayoutEnrollTestPapersRouteRouteImport } from './routes/_mainLayout/enroll-test-papers/route'
import { Route as MainLayoutEnrollProblemTwoRouteRouteImport } from './routes/_mainLayout/enroll-problem-two/route'
import { Route as MainLayoutEnrollProblemThreeRouteRouteImport } from './routes/_mainLayout/enroll-problem-three/route'
import { Route as MainLayoutEnrollProblemRouteRouteImport } from './routes/_mainLayout/enroll-problem/route'
import { Route as MainLayoutEnrollContestsRouteRouteImport } from './routes/_mainLayout/enroll-contests/route'
import { Route as MainLayoutAboutRouteRouteImport } from './routes/_mainLayout/about/route'
import { Route as MainLayoutTestPapersIndexRouteImport } from './routes/_mainLayout/test-papers/index'
import { Route as MainLayoutProblemsIndexRouteImport } from './routes/_mainLayout/problems/index'
import { Route as MainLayoutContestsIndexRouteImport } from './routes/_mainLayout/contests/index'
import { Route as MainLayoutTestPapersTestPaperIdRouteImport } from './routes/_mainLayout/test-papers/$testPaperId'
import { Route as MainLayoutQuestionsQuestionIdRouteImport } from './routes/_mainLayout/questions/$questionId'
import { Route as MainLayoutProblemsProblemIdRouteImport } from './routes/_mainLayout/problems/$problemId'
import { Route as MainLayoutContestsContestIdRouteImport } from './routes/_mainLayout/contests/$contestId'
import { Route as MainLayoutProblemsUlsanRouteRouteImport } from './routes/_mainLayout/problems/ulsan/route'
import { Route as MainLayoutProblemsSeoulRouteRouteImport } from './routes/_mainLayout/problems/seoul/route'
import { Route as MainLayoutProblemsSchoolRouteRouteImport } from './routes/_mainLayout/problems/school/route'
import { Route as MainLayoutProblemsPopularRouteRouteImport } from './routes/_mainLayout/problems/popular/route'
import { Route as MainLayoutProblemsNewRouteRouteImport } from './routes/_mainLayout/problems/new/route'
import { Route as MainLayoutProblemsIncheonRouteRouteImport } from './routes/_mainLayout/problems/incheon/route'
import { Route as MainLayoutProblemsGwangjuRouteRouteImport } from './routes/_mainLayout/problems/gwangju/route'
import { Route as MainLayoutProblemsDaejeonRouteRouteImport } from './routes/_mainLayout/problems/daejeon/route'
import { Route as MainLayoutProblemsDaeguRouteRouteImport } from './routes/_mainLayout/problems/daegu/route'
import { Route as MainLayoutProblemsCourseRouteRouteImport } from './routes/_mainLayout/problems/course/route'
import { Route as MainLayoutProblemsBusanRouteRouteImport } from './routes/_mainLayout/problems/busan/route'
import { Route as MainLayoutSolutionBoardWriteQuestionRouteRouteImport } from './routes/_mainLayout/solution-board/write/question/route'
import { Route as MainLayoutSolutionBoardListNoticeRouteRouteImport } from './routes/_mainLayout/solution-board/list/notice/route'
import { Route as MainLayoutSolutionBoardListFreeRouteRouteImport } from './routes/_mainLayout/solution-board/list/free/route'
import { Route as MainLayoutSolutionBoardListAllRouteRouteImport } from './routes/_mainLayout/solution-board/list/all/route'
import { Route as MainLayoutSolutionBoardQuestionTestPaperIndexRouteImport } from './routes/_mainLayout/solution-board/question/testPaper/index'
import { Route as MainLayoutSolutionBoardQuestionProblemIndexRouteImport } from './routes/_mainLayout/solution-board/question/problem/index'
import { Route as MainLayoutSolutionBoardQuestionContestIndexRouteImport } from './routes/_mainLayout/solution-board/question/contest/index'
import { Route as MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRouteImport } from './routes/_mainLayout/solution-board/question/testPaper/$testPaperId/route'
import { Route as MainLayoutSolutionBoardQuestionProblemProblemIdRouteRouteImport } from './routes/_mainLayout/solution-board/question/problem/$problemId/route'
import { Route as MainLayoutSolutionBoardQuestionContestContestIdRouteRouteImport } from './routes/_mainLayout/solution-board/question/contest/$contestId/route'

const MainLayoutRouteRoute = MainLayoutRouteRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutRankingsRouteRoute = MainLayoutRankingsRouteRouteImport.update({
  id: '/rankings',
  path: '/rankings',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutLoginRouteRoute = MainLayoutLoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutEnrollTestPapersRouteRoute =
  MainLayoutEnrollTestPapersRouteRouteImport.update({
    id: '/enroll-test-papers',
    path: '/enroll-test-papers',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutEnrollProblemTwoRouteRoute =
  MainLayoutEnrollProblemTwoRouteRouteImport.update({
    id: '/enroll-problem-two',
    path: '/enroll-problem-two',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutEnrollProblemThreeRouteRoute =
  MainLayoutEnrollProblemThreeRouteRouteImport.update({
    id: '/enroll-problem-three',
    path: '/enroll-problem-three',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutEnrollProblemRouteRoute =
  MainLayoutEnrollProblemRouteRouteImport.update({
    id: '/enroll-problem',
    path: '/enroll-problem',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutEnrollContestsRouteRoute =
  MainLayoutEnrollContestsRouteRouteImport.update({
    id: '/enroll-contests',
    path: '/enroll-contests',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutAboutRouteRoute = MainLayoutAboutRouteRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutTestPapersIndexRoute =
  MainLayoutTestPapersIndexRouteImport.update({
    id: '/test-papers/',
    path: '/test-papers/',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsIndexRoute = MainLayoutProblemsIndexRouteImport.update({
  id: '/problems/',
  path: '/problems/',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutContestsIndexRoute = MainLayoutContestsIndexRouteImport.update({
  id: '/contests/',
  path: '/contests/',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutTestPapersTestPaperIdRoute =
  MainLayoutTestPapersTestPaperIdRouteImport.update({
    id: '/test-papers/$testPaperId',
    path: '/test-papers/$testPaperId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutQuestionsQuestionIdRoute =
  MainLayoutQuestionsQuestionIdRouteImport.update({
    id: '/questions/$questionId',
    path: '/questions/$questionId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsProblemIdRoute =
  MainLayoutProblemsProblemIdRouteImport.update({
    id: '/problems/$problemId',
    path: '/problems/$problemId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutContestsContestIdRoute =
  MainLayoutContestsContestIdRouteImport.update({
    id: '/contests/$contestId',
    path: '/contests/$contestId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsUlsanRouteRoute =
  MainLayoutProblemsUlsanRouteRouteImport.update({
    id: '/problems/ulsan',
    path: '/problems/ulsan',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsSeoulRouteRoute =
  MainLayoutProblemsSeoulRouteRouteImport.update({
    id: '/problems/seoul',
    path: '/problems/seoul',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsSchoolRouteRoute =
  MainLayoutProblemsSchoolRouteRouteImport.update({
    id: '/problems/school',
    path: '/problems/school',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsPopularRouteRoute =
  MainLayoutProblemsPopularRouteRouteImport.update({
    id: '/problems/popular',
    path: '/problems/popular',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsNewRouteRoute =
  MainLayoutProblemsNewRouteRouteImport.update({
    id: '/problems/new',
    path: '/problems/new',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsIncheonRouteRoute =
  MainLayoutProblemsIncheonRouteRouteImport.update({
    id: '/problems/incheon',
    path: '/problems/incheon',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsGwangjuRouteRoute =
  MainLayoutProblemsGwangjuRouteRouteImport.update({
    id: '/problems/gwangju',
    path: '/problems/gwangju',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsDaejeonRouteRoute =
  MainLayoutProblemsDaejeonRouteRouteImport.update({
    id: '/problems/daejeon',
    path: '/problems/daejeon',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsDaeguRouteRoute =
  MainLayoutProblemsDaeguRouteRouteImport.update({
    id: '/problems/daegu',
    path: '/problems/daegu',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsCourseRouteRoute =
  MainLayoutProblemsCourseRouteRouteImport.update({
    id: '/problems/course',
    path: '/problems/course',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutProblemsBusanRouteRoute =
  MainLayoutProblemsBusanRouteRouteImport.update({
    id: '/problems/busan',
    path: '/problems/busan',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardWriteQuestionRouteRoute =
  MainLayoutSolutionBoardWriteQuestionRouteRouteImport.update({
    id: '/solution-board/write/question',
    path: '/solution-board/write/question',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardListNoticeRouteRoute =
  MainLayoutSolutionBoardListNoticeRouteRouteImport.update({
    id: '/solution-board/list/notice',
    path: '/solution-board/list/notice',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardListFreeRouteRoute =
  MainLayoutSolutionBoardListFreeRouteRouteImport.update({
    id: '/solution-board/list/free',
    path: '/solution-board/list/free',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardListAllRouteRoute =
  MainLayoutSolutionBoardListAllRouteRouteImport.update({
    id: '/solution-board/list/all',
    path: '/solution-board/list/all',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionTestPaperIndexRoute =
  MainLayoutSolutionBoardQuestionTestPaperIndexRouteImport.update({
    id: '/solution-board/question/testPaper/',
    path: '/solution-board/question/testPaper/',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionProblemIndexRoute =
  MainLayoutSolutionBoardQuestionProblemIndexRouteImport.update({
    id: '/solution-board/question/problem/',
    path: '/solution-board/question/problem/',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionContestIndexRoute =
  MainLayoutSolutionBoardQuestionContestIndexRouteImport.update({
    id: '/solution-board/question/contest/',
    path: '/solution-board/question/contest/',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute =
  MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRouteImport.update({
    id: '/solution-board/question/testPaper/$testPaperId',
    path: '/solution-board/question/testPaper/$testPaperId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute =
  MainLayoutSolutionBoardQuestionProblemProblemIdRouteRouteImport.update({
    id: '/solution-board/question/problem/$problemId',
    path: '/solution-board/question/problem/$problemId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)
const MainLayoutSolutionBoardQuestionContestContestIdRouteRoute =
  MainLayoutSolutionBoardQuestionContestContestIdRouteRouteImport.update({
    id: '/solution-board/question/contest/$contestId',
    path: '/solution-board/question/contest/$contestId',
    getParentRoute: () => MainLayoutRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof MainLayoutAboutRouteRoute
  '/enroll-contests': typeof MainLayoutEnrollContestsRouteRoute
  '/enroll-problem': typeof MainLayoutEnrollProblemRouteRoute
  '/enroll-problem-three': typeof MainLayoutEnrollProblemThreeRouteRoute
  '/enroll-problem-two': typeof MainLayoutEnrollProblemTwoRouteRoute
  '/enroll-test-papers': typeof MainLayoutEnrollTestPapersRouteRoute
  '/login': typeof MainLayoutLoginRouteRoute
  '/rankings': typeof MainLayoutRankingsRouteRoute
  '/problems/busan': typeof MainLayoutProblemsBusanRouteRoute
  '/problems/course': typeof MainLayoutProblemsCourseRouteRoute
  '/problems/daegu': typeof MainLayoutProblemsDaeguRouteRoute
  '/problems/daejeon': typeof MainLayoutProblemsDaejeonRouteRoute
  '/problems/gwangju': typeof MainLayoutProblemsGwangjuRouteRoute
  '/problems/incheon': typeof MainLayoutProblemsIncheonRouteRoute
  '/problems/new': typeof MainLayoutProblemsNewRouteRoute
  '/problems/popular': typeof MainLayoutProblemsPopularRouteRoute
  '/problems/school': typeof MainLayoutProblemsSchoolRouteRoute
  '/problems/seoul': typeof MainLayoutProblemsSeoulRouteRoute
  '/problems/ulsan': typeof MainLayoutProblemsUlsanRouteRoute
  '/contests/$contestId': typeof MainLayoutContestsContestIdRoute
  '/problems/$problemId': typeof MainLayoutProblemsProblemIdRoute
  '/questions/$questionId': typeof MainLayoutQuestionsQuestionIdRoute
  '/test-papers/$testPaperId': typeof MainLayoutTestPapersTestPaperIdRoute
  '/contests': typeof MainLayoutContestsIndexRoute
  '/problems': typeof MainLayoutProblemsIndexRoute
  '/test-papers': typeof MainLayoutTestPapersIndexRoute
  '/solution-board/list/all': typeof MainLayoutSolutionBoardListAllRouteRoute
  '/solution-board/list/free': typeof MainLayoutSolutionBoardListFreeRouteRoute
  '/solution-board/list/notice': typeof MainLayoutSolutionBoardListNoticeRouteRoute
  '/solution-board/write/question': typeof MainLayoutSolutionBoardWriteQuestionRouteRoute
  '/solution-board/question/contest/$contestId': typeof MainLayoutSolutionBoardQuestionContestContestIdRouteRoute
  '/solution-board/question/problem/$problemId': typeof MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute
  '/solution-board/question/testPaper/$testPaperId': typeof MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute
  '/solution-board/question/contest': typeof MainLayoutSolutionBoardQuestionContestIndexRoute
  '/solution-board/question/problem': typeof MainLayoutSolutionBoardQuestionProblemIndexRoute
  '/solution-board/question/testPaper': typeof MainLayoutSolutionBoardQuestionTestPaperIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof MainLayoutAboutRouteRoute
  '/enroll-contests': typeof MainLayoutEnrollContestsRouteRoute
  '/enroll-problem': typeof MainLayoutEnrollProblemRouteRoute
  '/enroll-problem-three': typeof MainLayoutEnrollProblemThreeRouteRoute
  '/enroll-problem-two': typeof MainLayoutEnrollProblemTwoRouteRoute
  '/enroll-test-papers': typeof MainLayoutEnrollTestPapersRouteRoute
  '/login': typeof MainLayoutLoginRouteRoute
  '/rankings': typeof MainLayoutRankingsRouteRoute
  '/problems/busan': typeof MainLayoutProblemsBusanRouteRoute
  '/problems/course': typeof MainLayoutProblemsCourseRouteRoute
  '/problems/daegu': typeof MainLayoutProblemsDaeguRouteRoute
  '/problems/daejeon': typeof MainLayoutProblemsDaejeonRouteRoute
  '/problems/gwangju': typeof MainLayoutProblemsGwangjuRouteRoute
  '/problems/incheon': typeof MainLayoutProblemsIncheonRouteRoute
  '/problems/new': typeof MainLayoutProblemsNewRouteRoute
  '/problems/popular': typeof MainLayoutProblemsPopularRouteRoute
  '/problems/school': typeof MainLayoutProblemsSchoolRouteRoute
  '/problems/seoul': typeof MainLayoutProblemsSeoulRouteRoute
  '/problems/ulsan': typeof MainLayoutProblemsUlsanRouteRoute
  '/contests/$contestId': typeof MainLayoutContestsContestIdRoute
  '/problems/$problemId': typeof MainLayoutProblemsProblemIdRoute
  '/questions/$questionId': typeof MainLayoutQuestionsQuestionIdRoute
  '/test-papers/$testPaperId': typeof MainLayoutTestPapersTestPaperIdRoute
  '/contests': typeof MainLayoutContestsIndexRoute
  '/problems': typeof MainLayoutProblemsIndexRoute
  '/test-papers': typeof MainLayoutTestPapersIndexRoute
  '/solution-board/list/all': typeof MainLayoutSolutionBoardListAllRouteRoute
  '/solution-board/list/free': typeof MainLayoutSolutionBoardListFreeRouteRoute
  '/solution-board/list/notice': typeof MainLayoutSolutionBoardListNoticeRouteRoute
  '/solution-board/write/question': typeof MainLayoutSolutionBoardWriteQuestionRouteRoute
  '/solution-board/question/contest/$contestId': typeof MainLayoutSolutionBoardQuestionContestContestIdRouteRoute
  '/solution-board/question/problem/$problemId': typeof MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute
  '/solution-board/question/testPaper/$testPaperId': typeof MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute
  '/solution-board/question/contest': typeof MainLayoutSolutionBoardQuestionContestIndexRoute
  '/solution-board/question/problem': typeof MainLayoutSolutionBoardQuestionProblemIndexRoute
  '/solution-board/question/testPaper': typeof MainLayoutSolutionBoardQuestionTestPaperIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteRouteWithChildren
  '/_mainLayout/about': typeof MainLayoutAboutRouteRoute
  '/_mainLayout/enroll-contests': typeof MainLayoutEnrollContestsRouteRoute
  '/_mainLayout/enroll-problem': typeof MainLayoutEnrollProblemRouteRoute
  '/_mainLayout/enroll-problem-three': typeof MainLayoutEnrollProblemThreeRouteRoute
  '/_mainLayout/enroll-problem-two': typeof MainLayoutEnrollProblemTwoRouteRoute
  '/_mainLayout/enroll-test-papers': typeof MainLayoutEnrollTestPapersRouteRoute
  '/_mainLayout/login': typeof MainLayoutLoginRouteRoute
  '/_mainLayout/rankings': typeof MainLayoutRankingsRouteRoute
  '/_mainLayout/problems/busan': typeof MainLayoutProblemsBusanRouteRoute
  '/_mainLayout/problems/course': typeof MainLayoutProblemsCourseRouteRoute
  '/_mainLayout/problems/daegu': typeof MainLayoutProblemsDaeguRouteRoute
  '/_mainLayout/problems/daejeon': typeof MainLayoutProblemsDaejeonRouteRoute
  '/_mainLayout/problems/gwangju': typeof MainLayoutProblemsGwangjuRouteRoute
  '/_mainLayout/problems/incheon': typeof MainLayoutProblemsIncheonRouteRoute
  '/_mainLayout/problems/new': typeof MainLayoutProblemsNewRouteRoute
  '/_mainLayout/problems/popular': typeof MainLayoutProblemsPopularRouteRoute
  '/_mainLayout/problems/school': typeof MainLayoutProblemsSchoolRouteRoute
  '/_mainLayout/problems/seoul': typeof MainLayoutProblemsSeoulRouteRoute
  '/_mainLayout/problems/ulsan': typeof MainLayoutProblemsUlsanRouteRoute
  '/_mainLayout/contests/$contestId': typeof MainLayoutContestsContestIdRoute
  '/_mainLayout/problems/$problemId': typeof MainLayoutProblemsProblemIdRoute
  '/_mainLayout/questions/$questionId': typeof MainLayoutQuestionsQuestionIdRoute
  '/_mainLayout/test-papers/$testPaperId': typeof MainLayoutTestPapersTestPaperIdRoute
  '/_mainLayout/contests/': typeof MainLayoutContestsIndexRoute
  '/_mainLayout/problems/': typeof MainLayoutProblemsIndexRoute
  '/_mainLayout/test-papers/': typeof MainLayoutTestPapersIndexRoute
  '/_mainLayout/solution-board/list/all': typeof MainLayoutSolutionBoardListAllRouteRoute
  '/_mainLayout/solution-board/list/free': typeof MainLayoutSolutionBoardListFreeRouteRoute
  '/_mainLayout/solution-board/list/notice': typeof MainLayoutSolutionBoardListNoticeRouteRoute
  '/_mainLayout/solution-board/write/question': typeof MainLayoutSolutionBoardWriteQuestionRouteRoute
  '/_mainLayout/solution-board/question/contest/$contestId': typeof MainLayoutSolutionBoardQuestionContestContestIdRouteRoute
  '/_mainLayout/solution-board/question/problem/$problemId': typeof MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute
  '/_mainLayout/solution-board/question/testPaper/$testPaperId': typeof MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute
  '/_mainLayout/solution-board/question/contest/': typeof MainLayoutSolutionBoardQuestionContestIndexRoute
  '/_mainLayout/solution-board/question/problem/': typeof MainLayoutSolutionBoardQuestionProblemIndexRoute
  '/_mainLayout/solution-board/question/testPaper/': typeof MainLayoutSolutionBoardQuestionTestPaperIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/enroll-contests'
    | '/enroll-problem'
    | '/enroll-problem-three'
    | '/enroll-problem-two'
    | '/enroll-test-papers'
    | '/login'
    | '/rankings'
    | '/problems/busan'
    | '/problems/course'
    | '/problems/daegu'
    | '/problems/daejeon'
    | '/problems/gwangju'
    | '/problems/incheon'
    | '/problems/new'
    | '/problems/popular'
    | '/problems/school'
    | '/problems/seoul'
    | '/problems/ulsan'
    | '/contests/$contestId'
    | '/problems/$problemId'
    | '/questions/$questionId'
    | '/test-papers/$testPaperId'
    | '/contests'
    | '/problems'
    | '/test-papers'
    | '/solution-board/list/all'
    | '/solution-board/list/free'
    | '/solution-board/list/notice'
    | '/solution-board/write/question'
    | '/solution-board/question/contest/$contestId'
    | '/solution-board/question/problem/$problemId'
    | '/solution-board/question/testPaper/$testPaperId'
    | '/solution-board/question/contest'
    | '/solution-board/question/problem'
    | '/solution-board/question/testPaper'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/enroll-contests'
    | '/enroll-problem'
    | '/enroll-problem-three'
    | '/enroll-problem-two'
    | '/enroll-test-papers'
    | '/login'
    | '/rankings'
    | '/problems/busan'
    | '/problems/course'
    | '/problems/daegu'
    | '/problems/daejeon'
    | '/problems/gwangju'
    | '/problems/incheon'
    | '/problems/new'
    | '/problems/popular'
    | '/problems/school'
    | '/problems/seoul'
    | '/problems/ulsan'
    | '/contests/$contestId'
    | '/problems/$problemId'
    | '/questions/$questionId'
    | '/test-papers/$testPaperId'
    | '/contests'
    | '/problems'
    | '/test-papers'
    | '/solution-board/list/all'
    | '/solution-board/list/free'
    | '/solution-board/list/notice'
    | '/solution-board/write/question'
    | '/solution-board/question/contest/$contestId'
    | '/solution-board/question/problem/$problemId'
    | '/solution-board/question/testPaper/$testPaperId'
    | '/solution-board/question/contest'
    | '/solution-board/question/problem'
    | '/solution-board/question/testPaper'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/_mainLayout/about'
    | '/_mainLayout/enroll-contests'
    | '/_mainLayout/enroll-problem'
    | '/_mainLayout/enroll-problem-three'
    | '/_mainLayout/enroll-problem-two'
    | '/_mainLayout/enroll-test-papers'
    | '/_mainLayout/login'
    | '/_mainLayout/rankings'
    | '/_mainLayout/problems/busan'
    | '/_mainLayout/problems/course'
    | '/_mainLayout/problems/daegu'
    | '/_mainLayout/problems/daejeon'
    | '/_mainLayout/problems/gwangju'
    | '/_mainLayout/problems/incheon'
    | '/_mainLayout/problems/new'
    | '/_mainLayout/problems/popular'
    | '/_mainLayout/problems/school'
    | '/_mainLayout/problems/seoul'
    | '/_mainLayout/problems/ulsan'
    | '/_mainLayout/contests/$contestId'
    | '/_mainLayout/problems/$problemId'
    | '/_mainLayout/questions/$questionId'
    | '/_mainLayout/test-papers/$testPaperId'
    | '/_mainLayout/contests/'
    | '/_mainLayout/problems/'
    | '/_mainLayout/test-papers/'
    | '/_mainLayout/solution-board/list/all'
    | '/_mainLayout/solution-board/list/free'
    | '/_mainLayout/solution-board/list/notice'
    | '/_mainLayout/solution-board/write/question'
    | '/_mainLayout/solution-board/question/contest/$contestId'
    | '/_mainLayout/solution-board/question/problem/$problemId'
    | '/_mainLayout/solution-board/question/testPaper/$testPaperId'
    | '/_mainLayout/solution-board/question/contest/'
    | '/_mainLayout/solution-board/question/problem/'
    | '/_mainLayout/solution-board/question/testPaper/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRouteRoute: typeof MainLayoutRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/rankings': {
      id: '/_mainLayout/rankings'
      path: '/rankings'
      fullPath: '/rankings'
      preLoaderRoute: typeof MainLayoutRankingsRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/login': {
      id: '/_mainLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof MainLayoutLoginRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/enroll-test-papers': {
      id: '/_mainLayout/enroll-test-papers'
      path: '/enroll-test-papers'
      fullPath: '/enroll-test-papers'
      preLoaderRoute: typeof MainLayoutEnrollTestPapersRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/enroll-problem-two': {
      id: '/_mainLayout/enroll-problem-two'
      path: '/enroll-problem-two'
      fullPath: '/enroll-problem-two'
      preLoaderRoute: typeof MainLayoutEnrollProblemTwoRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/enroll-problem-three': {
      id: '/_mainLayout/enroll-problem-three'
      path: '/enroll-problem-three'
      fullPath: '/enroll-problem-three'
      preLoaderRoute: typeof MainLayoutEnrollProblemThreeRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/enroll-problem': {
      id: '/_mainLayout/enroll-problem'
      path: '/enroll-problem'
      fullPath: '/enroll-problem'
      preLoaderRoute: typeof MainLayoutEnrollProblemRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/enroll-contests': {
      id: '/_mainLayout/enroll-contests'
      path: '/enroll-contests'
      fullPath: '/enroll-contests'
      preLoaderRoute: typeof MainLayoutEnrollContestsRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/about': {
      id: '/_mainLayout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MainLayoutAboutRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/test-papers/': {
      id: '/_mainLayout/test-papers/'
      path: '/test-papers'
      fullPath: '/test-papers'
      preLoaderRoute: typeof MainLayoutTestPapersIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/': {
      id: '/_mainLayout/problems/'
      path: '/problems'
      fullPath: '/problems'
      preLoaderRoute: typeof MainLayoutProblemsIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/contests/': {
      id: '/_mainLayout/contests/'
      path: '/contests'
      fullPath: '/contests'
      preLoaderRoute: typeof MainLayoutContestsIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/test-papers/$testPaperId': {
      id: '/_mainLayout/test-papers/$testPaperId'
      path: '/test-papers/$testPaperId'
      fullPath: '/test-papers/$testPaperId'
      preLoaderRoute: typeof MainLayoutTestPapersTestPaperIdRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/questions/$questionId': {
      id: '/_mainLayout/questions/$questionId'
      path: '/questions/$questionId'
      fullPath: '/questions/$questionId'
      preLoaderRoute: typeof MainLayoutQuestionsQuestionIdRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/$problemId': {
      id: '/_mainLayout/problems/$problemId'
      path: '/problems/$problemId'
      fullPath: '/problems/$problemId'
      preLoaderRoute: typeof MainLayoutProblemsProblemIdRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/contests/$contestId': {
      id: '/_mainLayout/contests/$contestId'
      path: '/contests/$contestId'
      fullPath: '/contests/$contestId'
      preLoaderRoute: typeof MainLayoutContestsContestIdRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/ulsan': {
      id: '/_mainLayout/problems/ulsan'
      path: '/problems/ulsan'
      fullPath: '/problems/ulsan'
      preLoaderRoute: typeof MainLayoutProblemsUlsanRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/seoul': {
      id: '/_mainLayout/problems/seoul'
      path: '/problems/seoul'
      fullPath: '/problems/seoul'
      preLoaderRoute: typeof MainLayoutProblemsSeoulRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/school': {
      id: '/_mainLayout/problems/school'
      path: '/problems/school'
      fullPath: '/problems/school'
      preLoaderRoute: typeof MainLayoutProblemsSchoolRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/popular': {
      id: '/_mainLayout/problems/popular'
      path: '/problems/popular'
      fullPath: '/problems/popular'
      preLoaderRoute: typeof MainLayoutProblemsPopularRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/new': {
      id: '/_mainLayout/problems/new'
      path: '/problems/new'
      fullPath: '/problems/new'
      preLoaderRoute: typeof MainLayoutProblemsNewRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/incheon': {
      id: '/_mainLayout/problems/incheon'
      path: '/problems/incheon'
      fullPath: '/problems/incheon'
      preLoaderRoute: typeof MainLayoutProblemsIncheonRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/gwangju': {
      id: '/_mainLayout/problems/gwangju'
      path: '/problems/gwangju'
      fullPath: '/problems/gwangju'
      preLoaderRoute: typeof MainLayoutProblemsGwangjuRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/daejeon': {
      id: '/_mainLayout/problems/daejeon'
      path: '/problems/daejeon'
      fullPath: '/problems/daejeon'
      preLoaderRoute: typeof MainLayoutProblemsDaejeonRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/daegu': {
      id: '/_mainLayout/problems/daegu'
      path: '/problems/daegu'
      fullPath: '/problems/daegu'
      preLoaderRoute: typeof MainLayoutProblemsDaeguRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/course': {
      id: '/_mainLayout/problems/course'
      path: '/problems/course'
      fullPath: '/problems/course'
      preLoaderRoute: typeof MainLayoutProblemsCourseRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/problems/busan': {
      id: '/_mainLayout/problems/busan'
      path: '/problems/busan'
      fullPath: '/problems/busan'
      preLoaderRoute: typeof MainLayoutProblemsBusanRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/write/question': {
      id: '/_mainLayout/solution-board/write/question'
      path: '/solution-board/write/question'
      fullPath: '/solution-board/write/question'
      preLoaderRoute: typeof MainLayoutSolutionBoardWriteQuestionRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/list/notice': {
      id: '/_mainLayout/solution-board/list/notice'
      path: '/solution-board/list/notice'
      fullPath: '/solution-board/list/notice'
      preLoaderRoute: typeof MainLayoutSolutionBoardListNoticeRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/list/free': {
      id: '/_mainLayout/solution-board/list/free'
      path: '/solution-board/list/free'
      fullPath: '/solution-board/list/free'
      preLoaderRoute: typeof MainLayoutSolutionBoardListFreeRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/list/all': {
      id: '/_mainLayout/solution-board/list/all'
      path: '/solution-board/list/all'
      fullPath: '/solution-board/list/all'
      preLoaderRoute: typeof MainLayoutSolutionBoardListAllRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/testPaper/': {
      id: '/_mainLayout/solution-board/question/testPaper/'
      path: '/solution-board/question/testPaper'
      fullPath: '/solution-board/question/testPaper'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionTestPaperIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/problem/': {
      id: '/_mainLayout/solution-board/question/problem/'
      path: '/solution-board/question/problem'
      fullPath: '/solution-board/question/problem'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionProblemIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/contest/': {
      id: '/_mainLayout/solution-board/question/contest/'
      path: '/solution-board/question/contest'
      fullPath: '/solution-board/question/contest'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionContestIndexRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/testPaper/$testPaperId': {
      id: '/_mainLayout/solution-board/question/testPaper/$testPaperId'
      path: '/solution-board/question/testPaper/$testPaperId'
      fullPath: '/solution-board/question/testPaper/$testPaperId'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/problem/$problemId': {
      id: '/_mainLayout/solution-board/question/problem/$problemId'
      path: '/solution-board/question/problem/$problemId'
      fullPath: '/solution-board/question/problem/$problemId'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionProblemProblemIdRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/solution-board/question/contest/$contestId': {
      id: '/_mainLayout/solution-board/question/contest/$contestId'
      path: '/solution-board/question/contest/$contestId'
      fullPath: '/solution-board/question/contest/$contestId'
      preLoaderRoute: typeof MainLayoutSolutionBoardQuestionContestContestIdRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
  }
}

interface MainLayoutRouteRouteChildren {
  MainLayoutAboutRouteRoute: typeof MainLayoutAboutRouteRoute
  MainLayoutEnrollContestsRouteRoute: typeof MainLayoutEnrollContestsRouteRoute
  MainLayoutEnrollProblemRouteRoute: typeof MainLayoutEnrollProblemRouteRoute
  MainLayoutEnrollProblemThreeRouteRoute: typeof MainLayoutEnrollProblemThreeRouteRoute
  MainLayoutEnrollProblemTwoRouteRoute: typeof MainLayoutEnrollProblemTwoRouteRoute
  MainLayoutEnrollTestPapersRouteRoute: typeof MainLayoutEnrollTestPapersRouteRoute
  MainLayoutLoginRouteRoute: typeof MainLayoutLoginRouteRoute
  MainLayoutRankingsRouteRoute: typeof MainLayoutRankingsRouteRoute
  MainLayoutProblemsBusanRouteRoute: typeof MainLayoutProblemsBusanRouteRoute
  MainLayoutProblemsCourseRouteRoute: typeof MainLayoutProblemsCourseRouteRoute
  MainLayoutProblemsDaeguRouteRoute: typeof MainLayoutProblemsDaeguRouteRoute
  MainLayoutProblemsDaejeonRouteRoute: typeof MainLayoutProblemsDaejeonRouteRoute
  MainLayoutProblemsGwangjuRouteRoute: typeof MainLayoutProblemsGwangjuRouteRoute
  MainLayoutProblemsIncheonRouteRoute: typeof MainLayoutProblemsIncheonRouteRoute
  MainLayoutProblemsNewRouteRoute: typeof MainLayoutProblemsNewRouteRoute
  MainLayoutProblemsPopularRouteRoute: typeof MainLayoutProblemsPopularRouteRoute
  MainLayoutProblemsSchoolRouteRoute: typeof MainLayoutProblemsSchoolRouteRoute
  MainLayoutProblemsSeoulRouteRoute: typeof MainLayoutProblemsSeoulRouteRoute
  MainLayoutProblemsUlsanRouteRoute: typeof MainLayoutProblemsUlsanRouteRoute
  MainLayoutContestsContestIdRoute: typeof MainLayoutContestsContestIdRoute
  MainLayoutProblemsProblemIdRoute: typeof MainLayoutProblemsProblemIdRoute
  MainLayoutQuestionsQuestionIdRoute: typeof MainLayoutQuestionsQuestionIdRoute
  MainLayoutTestPapersTestPaperIdRoute: typeof MainLayoutTestPapersTestPaperIdRoute
  MainLayoutContestsIndexRoute: typeof MainLayoutContestsIndexRoute
  MainLayoutProblemsIndexRoute: typeof MainLayoutProblemsIndexRoute
  MainLayoutTestPapersIndexRoute: typeof MainLayoutTestPapersIndexRoute
  MainLayoutSolutionBoardListAllRouteRoute: typeof MainLayoutSolutionBoardListAllRouteRoute
  MainLayoutSolutionBoardListFreeRouteRoute: typeof MainLayoutSolutionBoardListFreeRouteRoute
  MainLayoutSolutionBoardListNoticeRouteRoute: typeof MainLayoutSolutionBoardListNoticeRouteRoute
  MainLayoutSolutionBoardWriteQuestionRouteRoute: typeof MainLayoutSolutionBoardWriteQuestionRouteRoute
  MainLayoutSolutionBoardQuestionContestContestIdRouteRoute: typeof MainLayoutSolutionBoardQuestionContestContestIdRouteRoute
  MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute: typeof MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute
  MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute: typeof MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute
  MainLayoutSolutionBoardQuestionContestIndexRoute: typeof MainLayoutSolutionBoardQuestionContestIndexRoute
  MainLayoutSolutionBoardQuestionProblemIndexRoute: typeof MainLayoutSolutionBoardQuestionProblemIndexRoute
  MainLayoutSolutionBoardQuestionTestPaperIndexRoute: typeof MainLayoutSolutionBoardQuestionTestPaperIndexRoute
}

const MainLayoutRouteRouteChildren: MainLayoutRouteRouteChildren = {
  MainLayoutAboutRouteRoute: MainLayoutAboutRouteRoute,
  MainLayoutEnrollContestsRouteRoute: MainLayoutEnrollContestsRouteRoute,
  MainLayoutEnrollProblemRouteRoute: MainLayoutEnrollProblemRouteRoute,
  MainLayoutEnrollProblemThreeRouteRoute:
    MainLayoutEnrollProblemThreeRouteRoute,
  MainLayoutEnrollProblemTwoRouteRoute: MainLayoutEnrollProblemTwoRouteRoute,
  MainLayoutEnrollTestPapersRouteRoute: MainLayoutEnrollTestPapersRouteRoute,
  MainLayoutLoginRouteRoute: MainLayoutLoginRouteRoute,
  MainLayoutRankingsRouteRoute: MainLayoutRankingsRouteRoute,
  MainLayoutProblemsBusanRouteRoute: MainLayoutProblemsBusanRouteRoute,
  MainLayoutProblemsCourseRouteRoute: MainLayoutProblemsCourseRouteRoute,
  MainLayoutProblemsDaeguRouteRoute: MainLayoutProblemsDaeguRouteRoute,
  MainLayoutProblemsDaejeonRouteRoute: MainLayoutProblemsDaejeonRouteRoute,
  MainLayoutProblemsGwangjuRouteRoute: MainLayoutProblemsGwangjuRouteRoute,
  MainLayoutProblemsIncheonRouteRoute: MainLayoutProblemsIncheonRouteRoute,
  MainLayoutProblemsNewRouteRoute: MainLayoutProblemsNewRouteRoute,
  MainLayoutProblemsPopularRouteRoute: MainLayoutProblemsPopularRouteRoute,
  MainLayoutProblemsSchoolRouteRoute: MainLayoutProblemsSchoolRouteRoute,
  MainLayoutProblemsSeoulRouteRoute: MainLayoutProblemsSeoulRouteRoute,
  MainLayoutProblemsUlsanRouteRoute: MainLayoutProblemsUlsanRouteRoute,
  MainLayoutContestsContestIdRoute: MainLayoutContestsContestIdRoute,
  MainLayoutProblemsProblemIdRoute: MainLayoutProblemsProblemIdRoute,
  MainLayoutQuestionsQuestionIdRoute: MainLayoutQuestionsQuestionIdRoute,
  MainLayoutTestPapersTestPaperIdRoute: MainLayoutTestPapersTestPaperIdRoute,
  MainLayoutContestsIndexRoute: MainLayoutContestsIndexRoute,
  MainLayoutProblemsIndexRoute: MainLayoutProblemsIndexRoute,
  MainLayoutTestPapersIndexRoute: MainLayoutTestPapersIndexRoute,
  MainLayoutSolutionBoardListAllRouteRoute:
    MainLayoutSolutionBoardListAllRouteRoute,
  MainLayoutSolutionBoardListFreeRouteRoute:
    MainLayoutSolutionBoardListFreeRouteRoute,
  MainLayoutSolutionBoardListNoticeRouteRoute:
    MainLayoutSolutionBoardListNoticeRouteRoute,
  MainLayoutSolutionBoardWriteQuestionRouteRoute:
    MainLayoutSolutionBoardWriteQuestionRouteRoute,
  MainLayoutSolutionBoardQuestionContestContestIdRouteRoute:
    MainLayoutSolutionBoardQuestionContestContestIdRouteRoute,
  MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute:
    MainLayoutSolutionBoardQuestionProblemProblemIdRouteRoute,
  MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute:
    MainLayoutSolutionBoardQuestionTestPaperTestPaperIdRouteRoute,
  MainLayoutSolutionBoardQuestionContestIndexRoute:
    MainLayoutSolutionBoardQuestionContestIndexRoute,
  MainLayoutSolutionBoardQuestionProblemIndexRoute:
    MainLayoutSolutionBoardQuestionProblemIndexRoute,
  MainLayoutSolutionBoardQuestionTestPaperIndexRoute:
    MainLayoutSolutionBoardQuestionTestPaperIndexRoute,
}

const MainLayoutRouteRouteWithChildren = MainLayoutRouteRoute._addFileChildren(
  MainLayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRouteRoute: MainLayoutRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
