/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainLayoutRouteRouteImport } from './routes/_mainLayout/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainLayoutLoginRouteRouteImport } from './routes/_mainLayout/login/route'
import { Route as MainLayoutAboutRouteRouteImport } from './routes/_mainLayout/about/route'

const MainLayoutRouteRoute = MainLayoutRouteRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainLayoutLoginRouteRoute = MainLayoutLoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)
const MainLayoutAboutRouteRoute = MainLayoutAboutRouteRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => MainLayoutRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof MainLayoutAboutRouteRoute
  '/login': typeof MainLayoutLoginRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof MainLayoutAboutRouteRoute
  '/login': typeof MainLayoutLoginRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_mainLayout': typeof MainLayoutRouteRouteWithChildren
  '/_mainLayout/about': typeof MainLayoutAboutRouteRoute
  '/_mainLayout/login': typeof MainLayoutLoginRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/login'
  id:
    | '__root__'
    | '/'
    | '/_mainLayout'
    | '/_mainLayout/about'
    | '/_mainLayout/login'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainLayoutRouteRoute: typeof MainLayoutRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mainLayout': {
      id: '/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_mainLayout/login': {
      id: '/_mainLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof MainLayoutLoginRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
    '/_mainLayout/about': {
      id: '/_mainLayout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof MainLayoutAboutRouteRouteImport
      parentRoute: typeof MainLayoutRouteRoute
    }
  }
}

interface MainLayoutRouteRouteChildren {
  MainLayoutAboutRouteRoute: typeof MainLayoutAboutRouteRoute
  MainLayoutLoginRouteRoute: typeof MainLayoutLoginRouteRoute
}

const MainLayoutRouteRouteChildren: MainLayoutRouteRouteChildren = {
  MainLayoutAboutRouteRoute: MainLayoutAboutRouteRoute,
  MainLayoutLoginRouteRoute: MainLayoutLoginRouteRoute,
}

const MainLayoutRouteRouteWithChildren = MainLayoutRouteRoute._addFileChildren(
  MainLayoutRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainLayoutRouteRoute: MainLayoutRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
